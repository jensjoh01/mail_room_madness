"""This is pseudo code for mail room madness assignment, finished product will
be pseudo code functions and a flow chart"""


# Dictionary with donors and amounts they have donated
# initially empty
donors = {}

def main():
    """Ask the user for desired action and begin that action."""
    choice = get_user_prompt("Thank you or Print Report? (stop to quit)")

    # reprompt until a valid response is given
    while (choice != "thank you" and choice != "print report" and choice != "quit"):
        choice = get_user_prompt("Sorry, please type either "Create thank you", "Print report", or "quit")

    if choice() == "thank you":
        create_thank_you()
    elif choice == "print report":
        create_report()
    elif choice == "quit"
        sys.exit(0) # quit the program


def get_user_prompt(prompt):
    """Display prompt and returns user reponse lowercased."""
    response = raw_input(prompt)
    return response.lower()


def create_thank_you()
    """Create a thank you letter to specific donor with amount."""
    name = "" # priming the while loop
    while name == "":
        response = get_user_prompt("Enter donor's full name, or list to see all donors")
        if response.lower() == "list":
            for (name : donors.keys()):
                print(name)
        elif response.lower() == "quit":
            main()
        else: # a name has been given
            name = response.lower()

    if name not in donors.keys():
        donors[name] = []

    amount = 0
    while amount < 1:
        response = input("Enter donation amount (at least 1)")
        if response.lower == "quit"
            main() # return to main prompt
        else
            amount = int(response)

    donors[name].append(amount)
    print formatted("Thank you " + name + " for your very generous donation of $ " + amount)
    main() # to return to original prompt


def create_report():
    """Print a formatted report of all donors, sorted by total amount."""
    For each donor in donors:
        add up total donations for total
        calculate average donations amount
    sort donors based on total donation amount
    print the formatted report in order
    main() # to return to original prompt
